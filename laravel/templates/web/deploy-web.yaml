apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  labels:
    app: {{ .Release.Name }}
    tier: {{ .Values.app.tier }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      tier: {{ .Values.app.tier }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        tier: {{ .Values.app.tier }}
    spec:
      # Init Containers are executed before the actual containers start
      # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
      # - perform migration
      # - cache config
      # - copy directory structure to persistent volume
      initContainers:
       - name: artisan
         image: "{{ .Values.webImage.name }}:{{ .Values.webImage.tag }}"
         args:
           - /bin/bash
           - -c
           - php artisan migrate --force && php artisan config:cache && cp -Rnp /var/www/html/storage/* /mnt
         envFrom:
                 # - configMapRef:
                 #name: conf-env
           - configMapRef: { name: {{ .Release.Name }}-laravel }
         volumeMounts:
           - name: {{ .Values.app.tier }}-persistent-storage
             mountPath: /mnt
      containers:
       - name: {{ .Values.app.tier }}
         image: "{{ .Values.webImage.name }}:{{ .Values.webImage.tag }}"
         envFrom:
                 #- configMapRef:
                 #name: myapp-laravel
          - configMapRef: { name: {{ .Release.Name }}-laravel }
         ports:
          - containerPort: {{ .Values.app.port }}
         volumeMounts:
          - name: {{ .Values.app.tier }}-persistent-storage
            mountPath: {{ .Values.pvc.appmountPath }}
      volumes:
       - name: {{ .Values.app.tier }}-persistent-storage
         persistentVolumeClaim:
           claimName: {{ .Values.app.tier }}-pv-claim
