apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
  labels:
    app: {{ .Release.Name }}
    tier: {{ .Values.mysqlDeploy.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      tier: {{ .Values.mysqlDeploy.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        tier: {{ .Values.mysqlDeploy.name }}
    spec:
      containers:
      - image: {{ .Values.mysqlImage.name }}
        #   args:
        # - "--ignore-db-dir=lost+found"
        name: {{ .Values.mysqlDeploy.name }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.mysqlDeploy.mysqlRootValue }}
        - name: MYSQL_USER
          value:  {{ .Values.mysqlDeploy.mysqlUserValue }}
        - name: MYSQL_DATABASE
          value:  {{ .Values.mysqlDeploy.mysqlDBValue }}
        - name: MYSQL_PASSWORD
          #  value: IAqw8yE1mAwhJt59AEV@V
          # read the password from the ConfigMap
          # so we are sure laravel and MySQL use the same
          valueFrom:
            configMapKeyRef:
                    #name: conf-env
              name: {{ .Values.app.name }}-laravel
              key: DB_PASSWORD
        ports:
        - containerPort: {{ .Values.mysqlImage.port }}
          name: {{ .Values.mysqlDeploy.name }}
        volumeMounts:
        - name: {{ .Values.mysqlDeploy.name }}-persistent-storage
          mountPath: {{ .Values.pvc.mysqlmountPath }}
      volumes:
      - name: {{ .Values.mysqlDeploy.name }}-persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.mysqlDeploy.name }}-pv-claim

